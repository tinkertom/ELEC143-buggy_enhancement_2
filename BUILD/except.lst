


ARM Macro Assembler    Page 1 


    1 00000000         #       1                "mbed-os/platform/source/TARGET
_CORTEX_M/TOOLCHAIN_ARM/except.S"
    1 00000000         #       1                "<built-in>" 1
    1 00000000         #       1                "mbed-os/platform/source/TARGET
_CORTEX_M/TOOLCHAIN_ARM/except.S" 2
    1 00000000         ;
    2 00000000         #       30               "mbed-os/platform/source/TARGET
_CORTEX_M/TOOLCHAIN_ARM/except.S"
   30 00000000 00000010 
                       FAULT_TYPE_HARD_FAULT
                               EQU              0x10
   31 00000000 00000020 
                       FAULT_TYPE_MEMMANAGE_FAULT
                               EQU              0x20
   32 00000000 00000030 
                       FAULT_TYPE_BUS_FAULT
                               EQU              0x30
   33 00000000 00000040 
                       FAULT_TYPE_USAGE_FAULT
                               EQU              0x40
   34 00000000         
   35 00000000                 PRESERVE8
   36 00000000                 THUMB
   37 00000000         
   38 00000000                 AREA             |.text|, CODE, READONLY
   39 00000000         
   40 00000000         HardFault_Handler
                               PROC
   41 00000000         
   42 00000000                 EXPORT           HardFault_Handler
   43 00000000 F04F 0310       LDR              R3,=FAULT_TYPE_HARD_FAULT
   44 00000004 E7FE            B                Fault_Handler
   45 00000006                 ENDP
   46 00000006         
   47 00000006         MemManage_Handler
                               PROC
   48 00000006         
   49 00000006                 EXPORT           MemManage_Handler
   50 00000006 F04F 0320       LDR              R3,=FAULT_TYPE_MEMMANAGE_FAULT
   51 0000000A E7FE            B                Fault_Handler
   52 0000000C                 ENDP
   53 0000000C         
   54 0000000C         BusFault_Handler
                               PROC
   55 0000000C         
   56 0000000C                 EXPORT           BusFault_Handler
   57 0000000C F04F 0330       LDR              R3,=FAULT_TYPE_BUS_FAULT
   58 00000010 E7FE            B                Fault_Handler
   59 00000012                 ENDP
   60 00000012         
   61 00000012         UsageFault_Handler
                               PROC
   62 00000012         
   63 00000012                 EXPORT           UsageFault_Handler
   64 00000012 F04F 0340       LDR              R3,=FAULT_TYPE_USAGE_FAULT
   65 00000016 E7FE            B                Fault_Handler
   66 00000018                 ENDP
   67 00000018         
   68 00000018         Fault_Handler



ARM Macro Assembler    Page 2 


                               PROC
   69 00000018                 EXPORT           Fault_Handler
   70 00000018         
   71 00000018                 IMPORT           mbed_fault_handler
   72 00000018                 IMPORT           mbed_fault_context
   73 00000018         
   74 00000018 F3EF 8008       MRS              R0,MSP
   75 0000001C F04F 0104       LDR              R1,=0x4
   76 00000020 4672            MOV              R2,LR
   77 00000022 420A            TST              R2,R1       ; Check EXC_RETURN 
                                                            for bit 2
   78 00000024 D001            BEQ              Fault_Handler_Continue
   79 00000026 F3EF 8009       MRS              R0,PSP
   80 0000002A         
   81 0000002A         Fault_Handler_Continue
   82 0000002A 469C            MOV              R12,R3
   83 0000002C 4B25            LDR              R3,=mbed_fault_context
   84 0000002E 6819            LDR              R1,[R3]
   85 00000030 6802            LDR              R2,[R0]     ; Capture R0
   86 00000032 600A            STR              R2,[R1]
   87 00000034 3104            ADDS             R1,#4
   88 00000036 6842            LDR              R2,[R0,#4]  ; Capture R1
   89 00000038 600A            STR              R2,[R1]
   90 0000003A 3104            ADDS             R1,#4
   91 0000003C 6882            LDR              R2,[R0,#8]  ; Capture R2
   92 0000003E 600A            STR              R2,[R1]
   93 00000040 3104            ADDS             R1,#4
   94 00000042 68C2            LDR              R2,[R0,#12] ; Capture R3
   95 00000044 600A            STR              R2,[R1]
   96 00000046 3104            ADDS             R1,#4
   97 00000048 C1F0            STMIA            R1!,{R4-R7} ; Capture R4..R7
   98 0000004A 4647            MOV              R7,R8       ; Capture R8
   99 0000004C 600F            STR              R7,[R1]
  100 0000004E 3104            ADDS             R1,#4
  101 00000050 464F            MOV              R7,R9       ; Capture R9
  102 00000052 600F            STR              R7,[R1]
  103 00000054 3104            ADDS             R1,#4
  104 00000056 4657            MOV              R7,R10      ; Capture R10
  105 00000058 600F            STR              R7,[R1]
  106 0000005A 3104            ADDS             R1,#4
  107 0000005C 465F            MOV              R7,R11      ; Capture R11
  108 0000005E 600F            STR              R7,[R1]
  109 00000060 3104            ADDS             R1,#4
  110 00000062 6902            LDR              R2,[R0,#16] ; Capture R12
  111 00000064 600A            STR              R2,[R1]
  112 00000066 3108            ADDS             R1,#8       ; Add 8 here to cap
                                                            ture LR next, we wi
                                                            ll capture SP later
                                                            
  113 00000068 6942            LDR              R2,[R0,#20] ; Capture LR
  114 0000006A 600A            STR              R2,[R1]
  115 0000006C 3104            ADDS             R1,#4
  116 0000006E 6982            LDR              R2,[R0,#24] ; Capture PC
  117 00000070 600A            STR              R2,[R1]
  118 00000072 3104            ADDS             R1,#4
  119 00000074 69C2            LDR              R2,[R0,#28] ; Capture xPSR
  120 00000076 600A            STR              R2,[R1]
  121 00000078 3104            ADDS             R1,#4
  122 0000007A         ; Adjust stack pointer to its original value and capture



ARM Macro Assembler    Page 3 


                        it
  123 0000007A 4603            MOV              R3,R0
  124 0000007C 3320            ADDS             R3,#0x20    ; Add 0x20 to get t
                                                            he SP value prior t
                                                            o exception
  125 0000007E F44F 7600       LDR              R6,=0x200
  126 00000082 4232            TST              R2,R6       ; Check for if STK 
                                                            was aligned by chec
                                                            king bit-9 in xPSR 
                                                            value
  127 00000084 D000            BEQ              Fault_Handler_Continue1
  128 00000086 3304            ADDS             R3,#0x4
  129 00000088         
  130 00000088         Fault_Handler_Continue1
  131 00000088 4675            MOV              R5,LR
  132 0000008A F04F 0610       LDR              R6,=0x10    ; Check for bit-4 t
                                                            o see if FP context
                                                             was saved
  133 0000008E 4235            TST              R5,R6
  134 00000090 D100            BNE              Fault_Handler_Continue2
  135 00000092 3348            ADDS             R3,#0x48    ; 16 FP regs + FPCS
                                                            R + 1 Reserved
  136 00000094         
  137 00000094         Fault_Handler_Continue2
  138 00000094 460C            MOV              R4,R1
  139 00000096 3C10            SUBS             R4,#0x10    ; Set the location 
                                                            of SP in ctx
  140 00000098 6023            STR              R3,[R4]     ; Capture the adjus
                                                            ted SP
  141 0000009A F3EF 8209       MRS              R2,PSP      ; Get PSP
  142 0000009E 600A            STR              R2,[R1]
  143 000000A0 3104            ADDS             R1,#4
  144 000000A2 F3EF 8208       MRS              R2,MSP      ; Get MSP
  145 000000A6 600A            STR              R2,[R1]
  146 000000A8 3104            ADDS             R1,#4
  147 000000AA 4672            MOV              R2,LR       ; Get current LR(EX
                                                            C_RETURN)
  148 000000AC 600A            STR              R2,[R1]
  149 000000AE 3104            ADDS             R1,#4
  150 000000B0 F3EF 8214       MRS              R2,CONTROL  ; Get CONTROL Reg
  151 000000B4 600A            STR              R2,[R1]
  152 000000B6 4660            MOV              R0,R12
  153 000000B8 4B02            LDR              R3,=mbed_fault_context
  154 000000BA 6819            LDR              R1,[R3]
  155 000000BC F7FF FFFE       BL               mbed_fault_handler
  156 000000C0         
  157 000000C0 E7FE            B                .           ; Just in case we c
                                                            ome back here
  158 000000C2                 ENDP
  159 000000C2         
  160 000000C2         
  161 000000C2         
  162 000000C2                 END
              00 00 00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 -o.\build\except.o -I.\RTE\_ELEC143-P1-2019 -IC:\Keil_v5\ARM\PACK\Keil\STM32F4
xx_DFP\2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\
Include --predefine="__UVISION_VERSION SETA 528" --predefine="STM32F401xE SETA 
1" --cpreproc_opts=-D__ASSERT_MSG,-DTRANSACTION_QUEUE_SIZE_SPI=2,-D__CORTEX_M4,



ARM Macro Assembler    Page 4 


-DUSB_STM_HAL,-DARM_MATH_CM4,-D__FPU_PRESENT=1,-DUSBHOST_OTHER,-DUSE_FULL_LL_DR
IVER,-D__MBED_CMSIS_RTOS_CM,-D__CMSIS_RTOS,-DUSE_HAL_DRIVER,--target=arm-arm-no
ne-eabi,-mcpu=cortex-m4,-mfpu=fpv4-sp-d16,-mfloat-abi=hard,-D__UVISION_VERSION=
528,-DSTM32F401xE --list=.\build\except.lst mbed-os/platform/source/TARGET_CORT
EX_M/TOOLCHAIN_ARM/except.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      None
Comment: .text unused
BusFault_Handler 0000000C

Symbol: BusFault_Handler
   Definitions
      At line 54 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 56 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: BusFault_Handler used once
Fault_Handler 00000018

Symbol: Fault_Handler
   Definitions
      At line 68 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 44 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
      At line 51 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
      At line 58 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
      At line 65 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
      At line 69 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S

Fault_Handler_Continue 0000002A

Symbol: Fault_Handler_Continue
   Definitions
      At line 81 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 78 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: Fault_Handler_Continue used once
Fault_Handler_Continue1 00000088

Symbol: Fault_Handler_Continue1
   Definitions
      At line 130 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM
\except.S
   Uses
      At line 127 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM
\except.S
Comment: Fault_Handler_Continue1 used once
Fault_Handler_Continue2 00000094




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Fault_Handler_Continue2
   Definitions
      At line 137 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM
\except.S
   Uses
      At line 134 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM
\except.S
Comment: Fault_Handler_Continue2 used once
HardFault_Handler 00000000

Symbol: HardFault_Handler
   Definitions
      At line 40 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 42 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: HardFault_Handler used once
MemManage_Handler 00000006

Symbol: MemManage_Handler
   Definitions
      At line 47 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 49 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: MemManage_Handler used once
UsageFault_Handler 00000012

Symbol: UsageFault_Handler
   Definitions
      At line 61 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 63 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: UsageFault_Handler used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FAULT_TYPE_BUS_FAULT 00000030

Symbol: FAULT_TYPE_BUS_FAULT
   Definitions
      At line 32 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 57 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: FAULT_TYPE_BUS_FAULT used once
FAULT_TYPE_HARD_FAULT 00000010

Symbol: FAULT_TYPE_HARD_FAULT
   Definitions
      At line 30 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 43 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: FAULT_TYPE_HARD_FAULT used once
FAULT_TYPE_MEMMANAGE_FAULT 00000020

Symbol: FAULT_TYPE_MEMMANAGE_FAULT
   Definitions
      At line 31 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 50 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: FAULT_TYPE_MEMMANAGE_FAULT used once
FAULT_TYPE_USAGE_FAULT 00000040

Symbol: FAULT_TYPE_USAGE_FAULT
   Definitions
      At line 33 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 64 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
Comment: FAULT_TYPE_USAGE_FAULT used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

mbed_fault_context 00000000

Symbol: mbed_fault_context
   Definitions
      At line 72 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 83 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
      At line 153 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM
\except.S

mbed_fault_handler 00000000

Symbol: mbed_fault_handler
   Definitions
      At line 71 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM\
except.S
   Uses
      At line 155 in file mbed-os\platform\source\TARGET_CORTEX_M\TOOLCHAIN_ARM
\except.S
Comment: mbed_fault_handler used once
2 symbols
350 symbols in table
